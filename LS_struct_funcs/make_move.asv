% Updates output_array with the new move.
%% Input:
%   %output_array:
        rows - a job allocated to a position in a machine
%   columns - job_cost, machine_no, unique job_id, movable
% output_array:
%   

function [output_array] = make_move(output_array, machine_start_indices,...
                                 move, fix_moved)
    if nargin == 3
        fix_moved = false;
    end
                             
    order_indices = move{1};
    program_indices = move{2};

    num_moves = length(program_indices);
    num_machines = length(order_indices);
    for i = 1:num_moves
        %Faster
        target_index = i+1;
        if i+1>num_machines
            target_index = 1;
        end
        
        program_index = machine_start_indices(order_indices(i))...
                        + program_indices(i)-1;
        
        output_array(program_index, 2) = order_indices(target_index);
        
        %Flag that this program can no longer be moved
        if fix_moved
           output_array(program_index, 4) = 0;
        end
    end
    
    %Re-sorts the output_array by machine, then whether movable
    if fix_moved
        output_array = sortrows(output_array, 4, 'descend');
    end
    output_array = sortrows(output_array, 2);
end

